1. Почему, как правило, лучше разместить подключение CSS между тэгами <head></head>, а JS <script>-ы , перед тэгом </body>, соответственно? Знаете ли вы какие-либо исключения, приведите примеры?


1) Стили рекомендуется подключать в head для того, чтобы страница как можно быстрее приняла свой внешний вид. Скрипты подключенные в head могут затормозить этот процесс, в связи с этим их рекомендуется подключать перед закрывающим тегом body. Исключением являются скрипты аналитики, для определения количества посетителей, которые не дождались загрузки страницы. В этом случае скрипт должен быть подключен в head


2. Как обеспечить корректное отображение текста на странице на нескольких языках (речь о кодировке)?


2) Кодировка HTML-страницы должна быть указана для того, чтобы браузер смог корректно отрисовать текст на странице. В противном случае вместо необходимых символов появятся малопонятные иероглифы.


3. Какую функцию выполняет элемент doctype?


3) С помощью этого элемента указывается тип текущего документа. Т.е. элемент необходим для правильного отображения и работы страницы в браузере.


4. На что нужно обратить внимание при разработке мультиязычных сайтов?


4) На объем кода, его читабельность и масштабируемость. А также, на быстродействие и производительность в процессе перерисовки контента, если перевод осуществляется «на лету». Если для каждой страницы сайта, существует ее локализованная версия, необходимо обратить внимание на то, идентифицируют ли ее поисковые системы.


5. Для чего нужны data — атрибуты?


5) Для хранения дополнительно информации, ассоциированной с каким-либо элементом.


6. Опишите разницу между cookies, sessionstorage и localstorage.


6) sessionstorage — хранит информацию в браузере, пока не закрыта вкладка, после ее закрытия — информация удаляется. localstorage — хранит информацию в браузере даже после того, как вкладка закрыта, не имеет срока жизни. cookies — хранят информацию, имеют срок жизни (expires), отправляются на сервер с запросом.


7. Опишите разницу между <script> , <script async> и <script defer>


7) script — начнет загружать файл JS, как только встретит его, при этом загрузка браузером оставшейся части HTML страницы, продолжится после того, как будет выполнен js скрипт. script-async — браузер не остановит обработку HTML страницы, а будет читать ее дальше. После того как скрипт загрузится — он выполнится, не дожидаясь загрузки всей HTML страницы. Если скриптов несколько — первым отработает тот, который быстрее загрузится. При использовании script-defer — также будет асинхронное выполнение скрипта, но в отличие от script-async — первым сработает тот скрипт, который встретился раньше. Еще одно отличие от async — это то, что script-defer сработает, когда вся страница HTML будет обработана браузером.


8. Что такое прогрессивный рендеринг?


8) Это процесс отрисовки контента страницы по мере его прогрузки (прогрессивно). Например, сначала рисуется текст, потом изображения, таблицы и т.п.


9. За что отвечает атрибут srcset в тэге <img> ? Объясните, каким образом браузер обрабатывает значение этого атрибута.


9) Список из одного или нескольких значений, указывающих набор возможных изображений для отображения в браузере. Каждое значение атрибута может иметь дескрипторы ширины или плотности пикселей, на основании которых браузер понимает какою картинку из списка необходимо загрузить.


10. Использовали ли вы когда-то HTML-препроцессоры? Расскажите о недостатках/преимуществах любого из них.


10) Препроцессоры дают дополнительный функционал по отрисовке коллекций, а также использованию условных конструкций непосредственно в HTML файле и т.д. Также дают более короткий синтаксис, PUG, например. Вышеупомянутый PUG обрабатывает вложенности с помощью отступов, что при копи-пасте кода часто ломает все верстку и ее сборку.


11. Что такое HTML?


11) HTML(HyperТext Markup Language, HTML) - это язык разметки. Вы используете HTML для разметки текстового документа. Иными словами он отвечает за расположение в документе Ваших текстов, рисунков, таблиц предназначенных для жизни в сети Интернет.


12. Чем отличается div от span? 


12) div - это блочный контейнер, а span - линейный. Контейнеры - это то, во что может быть вложено что-нибудь еще. div используется для разметки блоков, а span - для текста. div формирует блок из того, что в нем с новой строки и после него элемент идет с новой строки (если не поменять поведение с помощью CSS), а span не переносит и "обтягивает".


13. Как обозначаются комментарии в HTML?


13) <!-- вот так-->


14. Ссылки. Как задать адрес документа, на который следует перейти? 


14) <a href="https://jsehelper.blogspot.com/example/example.html">Абсолютная ссылка</a> 


15. Как сделать сcылку на имейл? 


15) <a href="mailto:testmail@mail.com">E-mail me</a>


16. Что делают теги <em></em> ?


16) Выводят заключенный в них текст курсивом. 


17. Что такое <ol></ol>, <ul></ul> и <li></li> ?


17) Теги <ol><ol> устанавливает нумерованный список. Каждый элемент списка должен начинаться и заканчиваться тегами <li><li> Если к тегу <ol> применяется таблица стилей, то элементы <li> наследуют эти свойства. Тег <ul> устанавливает ненумерованный (маркированный) список.


18. Зачем нужны теги <dl>,<dt>,<dd>? 


18) Теги <dl>,<dt>,<dd> предназначенны для создания списка определений. Каждый такой список начинается с контейнера <dl>, куда входит тег <dt> создающий термин и тег <dd> задающий определение этого термина. Закрывающий тег </dd> не обязателен, поскольку следующий тег сообщает о завершении предыдущего элемента. Тем не менее, хорошим стилем является закрывать все теги.


19. Зачем нужны теги <tr>, <th>, <td> ? 


19)Тег <tr> служит контейнером для создания строки таблицы. Каждая ячейка в пределах такой строки может задаваться с помощью тега <th> или <td>. <th> предназначен для создания одной ячейки таблицы, которая обозначается как заголовочная. Текст в такой ячейке отображается браузером обычно жирным шрифтом и выравнивается по центру. Тег <th> должен размещаться внутри контейнера <tr>, который в свою очередь располагается внутри тега <table>. <td> предназначен для создания одной ячейки таблицы. Тег <td> должен размещаться внутри контейнера <tr>, который в свою очередь располагается внутри тега <table>. 


20. В каком регистре лучше писать HTML-код? 


20)Раньше считалось, что это безразлично. Но с приходом XHTML на этот вопрос появился однозначный ответ - все теги, атрибуты и предопределенные значения пишем в нижнем регистре. 


21. Обязательно ли писать alt в <img>? 


21)Да. Этого требует стандарт, да и здравый смысл, т.к. некоторые пользователи все еще отключают картинки, а некоторые используют текстовые или даже голосовые браузеры. Если картинка не несет никакой смысловой нагрузки (элемент дизайна, "распорка" и т.п.), то можно поставить в тег <img> значение alt="". 


22. Что такое entities? 


22) Entities - это комбинации знака & и буквенного или цифрового кода после нее, предназначенные для замещения символов, которые не могут встречаться в "чистом" виде в HTML-тексте, например, символа "<".


23. Какая связь между SGML, HTML, XML и XHTML?


23) SGML (Standard generalized markup language — стандартный обобщённый язык разметки) – это стандарт, который определяет разметку документа.

HTML – это язык разметки, который описывается с помощью SGML.

Итак, с помощью SGML было создано DTD (определение типа документа), на которое ссылается и которого должен придерживаться HTML. Поэтому вы всегда можете найти декларацию «DOCTYPE» в начале страницы HTML, которая определяет, какое DTD будет использовать браузер при разборе кода страницы.

Разбор кода по стандарту SGML был связан с определёнными трудностями, поэтому был создан XML, чтобы облегчить эту процедуру. XML использует SGML.

Например, в SGML вы должны использовать открывающие и закрывающие теги, тогда как в XML вы можете использовать самозакрывающиеся теги, которые закрываются автоматически (например, “”).

XHML был создан из XML и использовался в HTML 4.0. Поэтому, например, в HTML, основанном на SGML, тег
недопустим, а в XHTML он допускается. 
Вкратце, SGML стоит в основе всего. Старые версии HTML основаны на SGML, а HTML 4.0 использует XHTML, построенный на основе XML.


24. Что такое HTML 5?


24) HTML 5 – это новый стандарт HTML, главной целью которого является предоставление любого контента без использования дополнительных плагинов, таких как Flash, Silverlight и т.д. Он содержит всё необходимое для отображения анимации, видео, богатого графического интерфейса и прочего.

HTML5 – это результат совместной работы World Wide Web Consortium (W3C) и Web Hypertext Application Technology Working Group (WHATWG).


25. В HTML 5 нам не нужно DTD. Почему?


25) HTML 5 не использует SGML или XHTML. Это полностью новая разработка, поэтому вам не нужно ссылаться на DTD. В HTML 5 вам нужно использовать следующую декларацию doctype, которая позволяет браузеру идентифицировать документ как HTML 5. Если я не вставлю в документ <!DOCTYPE html>, будет ли работать HTML 5? Нет, браузер не сможет идентифицировать документ как HTML 5, и теги HTML 5 не будут работать корректно.


26. Какие браузеры поддерживают HTML 5?


26) Практически все браузеры, как Safari, Google Chrome, Firefox, Opera, Internet Explorer поддерживают HTML 5.

Как изменилась структура страницы при переходе с HTML 4 или предыдущих версий на HTML 5?

Обычно веб-страница содержит заголовки, подвал, навигацию, основной контент и боковой блок. Поэтому когда мы хотим представить эти блоки в HTML 4 с подходящим наименованием, мы, скорее всего, будем использовать теги DIV. Но в HTML 5 введены более понятные элементы для этих блоков, что позволило сделать код HTML более читаемым.

<header>: Представляет блок заголовка страницы;
<footer>: Подвал страницы;
<nav>: Навигационные элементы страницы;
<article>: Основной контент страницы (статья);
<section>: Используется внутри статьи, чтобы разделить статью на секции;
<aside>: Представляет боковой блок страницы.


27. Что такое элемент datalist в HTML 5?


27) Элемент datalist в HTML 5 помогает реализовать функцию автозаполнения в поле для ввода.

В HTML 5 введены десять новых важных элементов форм:

Color;
Date;
Datetime-local;
Email;
Time;
Url;
Range;
Telephone;
Number;
Search.

Если вы хотите отобразить диалоговое окно выбора цвета:

<input type="color" name="favcolor">

Если вы хотите отобразить диалоговое окно календаря:

<input type="date" name="bday">

Если вы хотите отобразить календарь с локальным временем:

<input type="datetime-local" name="bdaytime">

Если вы хотите создать HTML поле для ввода с проверкой адреса электронной почты, можно задать тип поля «email»:

<input type="email" name="email">

Для проверки URL-адреса используйте тип «url», как показано ниже:

<input type="url" name="sitename">

Если вы хотите отобразить поле для ввода чисел в заданном диапазоне, используйте тип «number»:

<input type="number" name="quantity" min="1" max="5">
Если вы хотите отобразить ползунок, используйте тип «range»:

<input type="range" min="0" max="10" step="2" value="6">
Хотите сделать поле для поиска:

<input type="search" name="googleengine">
Хотите принимать только время:

<input type="time" name="usr_time">
Если вы хотите сделать поле для ввода номеров телефона:

<input type="tel" name="mytel">


28. Что такое элемент output в HTML 5?


28) Элемент output требуется, когда вы хотите отобразить сумму двух введённых чисел в виде текста.

Например, у вас есть два поля для ввода и вы хотите сложить числа из этих двух полей и отобразить их сумму в виде текста.


29. Что такое SVG?


29) SVG означает scalable vector graphics (масштабируемая векторная графика). Это текстовой язык графики, с помощью которого можно рисовать изображения в виде текста, линий, точек и т.п., что позволяет создавать лёгкие и быстро обрабатываемые браузером изображения.


30. Что такое канва в HTML 5?


30) Канва – это область HTML документа, в которой вы можете рисовать.

Итак, как же нарисовать простую линию при помощи канвы?

Определите область канвы;
Получите доступ к контексту канвы;
Нарисуйте изображение.


31. Определение области канвы


31)Чтобы определить область канвы, вам потребуется следующий HTML код. Он определяет область, в которой вы можете рисовать:

<canvas id="mycanvas" width="600" height="500" style="border:1px solid #000000;"></canvas>


32. Из чего состоит форматированный текст HTML?


32) В первую очередь, HTML — это контент и теги. Теги позволяют задать способ отображения контента на веб-страницах.


33. Что такое HTML-тег?


33) Тег — это специальное служебное слово, заключенное в угловые скобки. Его ещё называют «элемент HTML». Тегов в языке HTML много и каждый что-то делает с контентом, который обычно находится внутри скобок или между тегами.
Если тег парный, то тегу <ТЕГ> соответствует </ТЕГ>.


34. Парными являются все теги?


34) Нет, не все. Существуют одиночные теги, например, <img> — для изображений. В этом случае контент вместе с другими служебными словами (например, для <img> это может быть src=”url изображения”) размещается между скобками, но после слова img.


35. Какие основные виды списков применяют при создании веб-страницы?


35) При создании веб-страницы можно использовать:

Menu list (список меню — <menu>).
Directory list (список директорий — <dir>).
Ordered list (нумерованный список — <ol>).
Unordered list (маркированный список — <ul>).
Definition list (список определений — <dl>).


36. Зачем использовать списки в HTML?


36) Списки делают информацию более наглядной и удобной для восприятия. Более того, внутри списков (точнее, для произвольного отображения элементов списка) тоже можно использовать различные теги.


37. Почему некоторые символы на веб-странице иногда отображаются некорректно?


37) Чаще всего символы отображаются некорректно из-за проблем с кодировкой. То есть причина — в настройках браузера или веб-сервера.


38. Что такое Image Map?


38) В HTML Image Map — это технология, которая позволяет привязывать ссылки к фрагментам изображения. Щелкая мышью на отдельных частях изображения, пользователь может переходить по той или иной ссылке на разные веб-страницы.


39. Что такое white-space?


39) White-space — это свойство, позволяющее менять количество пробелов между словами при отображении веб-страницы. По умолчанию любое количество пробелов в HTML-коде браузер интерпретирует как один пробел.


40. В чём главное преимущество white-space?


40) При написании HTML-кода разработчику не нужно беспокоиться о лишних пробелах, которые он мог ввести: браузер при отображении веб-страницы уберёт все лишние пробелы.
Разработчик может добавлять в код пробелы не только случайно, но и специально: чтобы код стал более читабельным.


41. Можно ли присваивать значения не всем атрибутам тега?


41) Да, в этом случае браузер будет использовать значения по умолчанию. Если вас не устраивает то, как он отобразил веб-страницу, то, возможно, следует явно указать значения некоторых атрибутов.


42. Как разместить знак copyright на веб-странице, ведь его нет на клавиатуре?


42) Знак copyright относится к спецсимволам. Чтобы разместить его на веб-странице, нужно в соответствующем фрагменте HTML-кода набрать на клавиатуре последовательность &copy или &#169.


43. Как создать ссылки на разные фрагменты (разделы) одной и той же веб-страницы?


43) Для этого нужно найти в HTML-коде начало нужного нам фрагмента. В этом месте создать так называемый «якорь» при помощи атрибута name тега <a> и дать имя ссылке на фрагмент, используя атрибут href и знак #:
href="#имя_ссылки_на_фрагмент"


44. Можем ли мы выравнивать элементы списка в HTML-файле?


44) Да, мы можем хранить элементы списка прямо в HTML-файле используя отступы. Отступ можно также использовать для любого вложенного списка внутри родительского.


45. Адрес какой веб-страницы обычно считается адресом сайта?


45) Обычно это одна из страниц верхнего уровня, главная страница. Из неё пользователь переходит на страницы, расположенные на более низких уровнях. И их адрес чаще всего формируется на основе адреса главной страницы.


46. Могут ли файлы HTML хорошо работать в каком-нибудь редком или ультрасовременном браузере?


46) Конечно, файлы HTML могут и должны хорошо работать в любом браузере, потому что браузер должен соответствовать стандартам HTML. Если разработчики решили не поддерживать некоторые функции стандарта, это остаётся на их совести.


47. Как вы думаете гиперссылка может быть только текстовой?


47) Нет, гиперссылка может быть не только текстовой, но и, например, графической. Это означает, что мы можем преобразовать изображение в ссылку, которая направит пользователя на другую страницу. Гиперссылка вообще не зависит от типа контента, который лежит «под ней».


48. Что из себя представляют атрибуты тега < li> — элемента списка?


48) Их два:

type устанавливает вид маркера нумерованного или маркированного списка;
value — число, с которого будет начинаться нумерованный список.


49. Где хранятся числовые коды символов в HTML?


49) В таблице ASCII. При отображении веб-страницы браузер берет числовые коды символов из HTML-документа и заменяет их на соответствующий символ из таблицы.


50. Каковы преимущества группировки нескольких флажков (элементов checkbox)?


50) Есть несколько преимуществ группировки флажков:

это помогает лучше организовать, структурировать их;
это позволяет обращаться к конкретным флажкам из группы, используя id;
это позволяет создать другую группу флажков на этой же веб-странице, не боясь перепутать названия или идентификаторы флажков.


51. Как перекрытие тегов влияет на отображение контента?


51) Перекрытие тегов в HTML приводит к распознаванию только первого тега. Но такие проблемы возникают только тогда, браузер пытается распознать теги без текста.


52. Если между тегами нет текста, каков будет результат? Приведите пример?


52) Если между тегами нет текста, то контент будет невозможно отформатировать. Например, одиночные теги, такие как < img>, не требуют ввода текста, и, следовательно, в таком случае форматирование не потребуется.


53. Как указать цвета для границ таблицы?


53) Это можно сделать в таблице стилей, а в случае ее отсутствия будет использован цвет текста.


54. Можем ли мы создать ссылку, которая ведет на другую веб-страницу?


54) Да, для этого нужно использовать атрибут href.


55. Могут ли таблицы стилей помочь выровнять изображение и задать способ позиционирования текста относительно него?


55) Да, таблица стилей может содержать правила для позиционирования текста и изображений.


56. Может ли одна гиперссылка вести на разные страницы?


56) Нет, одна гиперссылка может вести только на одну веб-страницу, адрес которой вы укажете.


57. Есть ли разница между маркированным списком и списком директорий и меню?


57) Да, разница заключается в том, что неупорядоченный список имеет атрибуты для изменения стиля маркера.


58. Как изменить цвет маркера?


58) Цвет маркера обычно соответствует цвету первого символа в списке. Если вы измените цвет первого символа с помощью тега <font>, то цвет маркера также изменится.
Если мы хотим задать цвет маркера в списке не изменяя цвет текста, то внутрь <li> нужно вложить тег <span>, а уже внутрь него поместить текст. И тогда цвет маркера будет определяться стилевым свойством color селектора LI, а цвет текста — свойством color селектора SPAN.


59. Можно ли ввести какие-то ограничения на размер текстовых полей в HTML?


59) Стандартный размер составляет 20-25 символов. Но используя атрибуты size или maxsize, можно задать другие ограничения. 


60. Чем ограничен максимальный размер текстового поля?


60) Шириной окна браузера.


61. Что будет, если установить нулевой размер текстового поля?


61) Браузер будет использовать значение по умолчанию.


62. Каковы сходства между атрибутами border и rules?


62) Если для атрибута border установлено ненулевое значение, границы ячейки по умолчанию с толщиной в один пиксель будут добавлены автоматически. Если в тег <table> добавить атрибут rules, то атрибут border не будет включен.
Но при этом вокруг каждой ячейки (так же, как у border) появится рамка толщиной в один пиксель по умолчанию, образуя тем самым сетку.


63. Что такое marquee? Как мы можем применить это?


63) Marquee помогает в настройке прокрутки текста на веб-странице. Чтобы активировать прокрутку, вам нужно использовать тег <marquee>.


64. Что делает тег <br> ?


64) Функция тега <br> состоит в том, чтобы отделять фрагменты текста друг от друга.


65. Есть ли другой способ разделить текст без использования <br>?


65) Да, существуют другие способы разделения текста. Можно использовать тег <p> или тег <blockquote>.


66. Может ли текст отображаться вне окна браузера?


66) По умолчанию текст не может отображаться за пределами браузера, но, если текст является частью ячейки таблицы с предварительно определённой шириной, то он может выходить за пределы окна браузера.


67. В чем разница между активными и неактивными ссылками?


67) Активная ссылка имеет фокус, то есть на неё наведена мышь. В остальных случаях фокус находится где-то в другом месте.


68. Имеет ли таблица стилей ограничения по количеству правил?


68) Нет, таблицы стилей не ограничивают количество правил для селектора. Однако каждое новое правило необходимо отделять от других с помощью точки с запятой.


69. Есть у таблиц стилей какая-либо иерархия правил?


69) Да, существует иерархия, которая включает в себя четыре уровня (от самого приоритетного к наименее приоритетному):

Встроенный стиль: прикрепляется непосредственно к элементу, для которого создается стиль. Пример:
<h1 style="color: #ffffff;">
Идентификатор — это уникальный идентификатор элементов страницы, таких как, #navbar.
Классы, атрибуты и псевдо-классы: эти категории включают.класс [атрибут] и псевдо-классы как например :hover, :focus и т.д.
Элементы и псевдо-элементы: эта категория включает элементы и псевдо-элементы, как например h1, div, :before и :after .


70. Можем ли мы сгруппировать разные селекторы с разными именами классов?


70) Да, для этого нужно просто написать имена классов через запятую.


71. Может ли свойство list-style-type влиять на абзац?


71) Нет, свойство list-style-type не может влиять на абзац, оно скорее проигнорирует его.


72. Что такое элемент canvas?


72) Элемент HTML5 canvas можно использовать для вставки изображений, градиентов и комплексной анимации. Он также может помочь в создании 2D-изображений непосредственно внутри исходного кода HTML-документа.
















